#!/bin/bash

COMPOSE=docker-compose.yml
locales=(en_GB en_US)

USAGE="Local Docker

\033[33mArguments:\033[0m
  up                Destroy, re-create and start containers
  down              Destroy containers
  
  pull              Pull latest images
  stop              Stop containers
  start             Start containers
  restart           Restart containers

  build             Deployment process
  cachedev          Development cache settings
  cacheflush        Flush cache
  cacheon           All cache on
  cacheoff          All cache off
  cli               Connect to bash
  cron              Run cron
  db                Connect to db
  di                Run di compile
  ko                Run knockout refresh
  magento           Run Magento command
  theme             Run theme compilation
  upgrade           Run upgrade command
  version           View versions in containers
  flush-redis       Clears redis cache
  ping-redis        Ping redis cache  
  composer          Run composer command
  

\033[33mOptions:\033[0m
  -h            show this help text\n"

if [ ${#@} -ne 0 ]; then
    for arg in "$@"; do
        if [ "${arg#"-h"}" = "" ]; then
            printf "$USAGE"
            exit 0;
        fi
    done
fi;

case "$1" in
    up)
        docker-compose -f $COMPOSE down -v --remove-orphans
        docker-compose -f $COMPOSE up -d --remove-orphans
        ;;
    down)
        docker-compose -f $COMPOSE down -v --remove-orphans
        ;;
    pull)
        docker-compose -f $COMPOSE pull
        ;;
    stop)
        docker-compose -f $COMPOSE stop
        ;;
    start)
        docker-compose -f $COMPOSE start
        ;;
    restart)
        docker-compose -f $COMPOSE restart
        ;;
    build)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        docker-compose -f $COMPOSE run --rm cli magento-command setup:upgrade
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        docker-compose -f $COMPOSE run --rm cli magento-command setup:di:compile
        for loc in ${locales[@]}; do
            docker-compose -f $COMPOSE run --rm cli magento-command setup:static-content:deploy -f $loc -j 4
        done
        ;;             
    cachedev)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:enable
        docker-compose -f $COMPOSE run --rm cli magento-command cache:disable layout block_html full_page
        ;;
    cacheflush)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        ;;
    cacheon)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:enable
        ;;
    cacheoff)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:disable
        ;;
    cli)
        docker-compose -f $COMPOSE run --rm cli
        ;;
    cron)
        docker-compose -f $COMPOSE run --rm cli magento-command cron:run
        ;;
    db)
        docker-compose -f $COMPOSE exec db sh -c 'mysql -u magento2 -pmagento2 magento2 "$@"'
        ;;
    di)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        docker-compose -f $COMPOSE run --rm cli magento-command setup:di:compile
        ;;
    composer)
        docker-compose -f $COMPOSE run --rm cli composer ${@:2}
        ;;         
    ko)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        docker-compose -f $COMPOSE run --rm cli magento-command xigen:clearstatic:clear -c
        for loc in ${locales[@]}; do
            docker-compose -f $COMPOSE run --rm cli magento-command setup:static-content:deploy -f $loc -j 4
        done
        ;;
    magento)
        docker-compose -f $COMPOSE run --rm cli magento-command ${@:2}
        ;;
    theme)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        for loc in ${locales[@]}; do
            docker-compose -f $COMPOSE run --rm cli magento-command setup:static-content:deploy -f $loc -j 4
        done        
        ;;
    upgrade)
        docker-compose -f $COMPOSE run --rm cli magento-command cache:clean
        docker-compose -f $COMPOSE run --rm cli magento-command setup:upgrade
        ;;
    version)
        docker-compose -f $COMPOSE run --rm cli php -v
        docker-compose -f $COMPOSE run --rm cli composer --version
        docker-compose -f $COMPOSE run --rm cli magento-command --version
        ;;
    flush-redis)
        docker-compose -f $COMPOSE exec redis redis-cli FLUSHALL
        ;;        
    ping-redis)
        docker-compose -f $COMPOSE exec redis redis-cli PING
        ;;
    *)
        printf "$USAGE"
        exit 0;
esac
